<?php

namespace Ensie\NotificationBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Ensie\UserBundle\Entity\EnsieUser;

/**
 * NotificationRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class NotificationRepository extends EntityRepository
{

    /**
     * @param EnsieUser $ensieUser
     * @param $notificationText
     * @param $type
     * @param EnsieUser $relationUser
     * @return Notification
     */
    public function create(EnsieUser $ensieUser, $notificationText, $type, EnsieUser $relationUser = null)
    {
        $notification = new Notification();
        if($relationUser){
            $notification->setCreateUser($relationUser);
        }
        $notification->setEnsieUser($ensieUser);
        $notification->setNotification($notificationText);
        $notification->setType($type);
        $this->getEntityManager()->persist($notification);
        return $notification;
    }

    /**
     * @param EnsieUser $ensieUser
     * @param null $limit
     * @param int $first
     * @return array
     */
    public function getNotifications(EnsieUser $ensieUser, $limit = null, $first = 0)
    {
        $qb = $this->createQueryBuilder('notification');
        $qb->select('notification');
        $qb->andWhere('notification.ensieUser = :ensieUser');
        $qb->setParameter('ensieUser', $ensieUser);
        $qb->orderBy('notification.createdAt', 'DESC');
        $qb->setFirstResult($first);
        if($limit != null){
            $qb->setMaxResults($limit);
        }
        $qb->setParameter('ensieUser', $ensieUser);
        return $qb->getQuery()->getResult();
    }

    /**
     * @param EnsieUser $ensieUser
     * @param $limit
     * @return array
     */
    public function getUnviewedNotifications(EnsieUser $ensieUser, $limit){
        $qb = $this->createQueryBuilder('notification');
        $qb->where('notification.viewed = false');
        $qb->andWhere('notification.ensieUser = :ensieUser');
        if($limit != null){
            $qb->setMaxResults($limit);
        }
        $qb->setParameter('ensieUser', $ensieUser);
        return $qb->getQuery()->getResult();
    }
}
