<?php

namespace Ensie\LanguageBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\NoResultException;

/**
 * LanguageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class LanguageRepository extends EntityRepository
{

    /**
     * @return array
     */
    public function getAllWritableLanguages(){
        $qb = $this->createQueryBuilder('lan');
        $qb->select('lan', 'tl');
        $qb->leftJoin('lan.translations', 'tl');
        $qb->where('lan.writeable = :writeable');
        $qb->orderBy('lan.locale', 'DESC');
        $qb->setParameter('writeable', true);
        return $qb->getQuery()->getResult();
    }

    /**
     * @return array
     */
    public function getCountyLanguageName(){
        $qb = $this->createQueryBuilder('lan');
        $qb->select('lan', 'tl');
        $qb->leftJoin('lan.translations', 'tl', 'WITH', 'lan.locale = tl.locale');
        $qb->where('lan.writeable = :writeable');
        $qb->orderBy('lan.locale', 'DESC');
        $qb->setParameter('writeable', true);
        return $qb->getQuery()->getResult();
    }

    /**
     * @param $locale
     * @return Language|null
     */
    public function getByLocale($locale){
        $qb = $this->createQueryBuilder('lan');
        $qb->select('lan', 'tl');
        $qb->leftJoin('lan.translations', 'tl');
        $qb->where('lan.locale = :locale');
        $qb->setParameter('locale', $locale);
        try{
            return $qb->getQuery()->getSingleResult();
        }
        catch(NoResultException $e){
            $languages = $this->findAll();
            if(count($languages) > 0){
                return $languages[0];
            }
            return null;
        }
    }

}
